//#1 - Sort 10 schools around your house by distance:
insertion algorithms.sort   --> data amount only 10 is small

//#2 - eBay sorts listings by the current Bid amount:
radix or counting algorithms.sort   --> the range of algorithms.bit amount is limited

//#3 - Sort scores on ESPN
Quick algorithms.sort  -->> decimal/different format

//#4 - Massive database (can't fit all into memory) needs to algorithms.sort through past year's user data
Merge Sort -->> data big so ig, worst case in merge algorithms.sort is much better than Quick algorithms.sort

//#5 - Almost sorted Udemy review data needs to update and add 2 new reviews
Insertion Sort -->> data mostly sorted

//#6 - Temperature Records for the past 50 years in Canada
radix or counting Sort -->> integer number in small range
Quick algorithms.sort if decimal places  -->> temperature could be decimal

//#7 - Large user name database needs to be sorted. Data is very random.
Quick algorithms.sort

//#8 - You want to teach sorting
Bubble algorithms.sort
